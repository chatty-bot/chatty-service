plugins {
    id "net.ltgt.apt-eclipse" version "0.21"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
    id "org.flywaydb.flyway" version "6.3.3"
    id "org.openapi.generator" version "4.3.0"

}


version "0.1"
group "chatty-service"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {


    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor(
            "com.querydsl:querydsl-apt:4.2.2:jpa",
            "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final",
            "javax.annotation:javax.annotation-api:1.3.2",
    )
    annotationProcessor "io.micronaut:micronaut-security"
    annotationProcessor "javax.persistence:javax.persistence-api:2.2"
    annotationProcessor("io.micronaut.configuration:micronaut-openapi:1.4.5")


    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut:micronaut-security-jwt"
    implementation "io.micronaut.configuration:micronaut-hibernate-jpa"

    implementation("io.swagger.core.v3:swagger-annotations")


    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    runtime 'org.postgresql:postgresql:42.2.4'
    runtime("io.micronaut.configuration:micronaut-jdbc-tomcat")


    // https://mvnrepository.com/artifact/com.opencsv/opencsv
    compile group: 'com.opencsv', name: 'opencsv', version: '4.0'
    compile 'io.micronaut.configuration:micronaut-flyway'
    // https://mvnrepository.com/artifact/com.querydsl/querydsl-jpa
    compile group: 'com.querydsl', name: 'querydsl-jpa', version: '4.2.2'
    compile "io.micronaut:micronaut-security"
    // https://mvnrepository.com/artifact/org.modelmapper/modelmapper
    compile group: 'org.modelmapper', name: 'modelmapper', version: '2.3.7'
    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    // https://mvnrepository.com/artifact/io.swagger.codegen.v3/swagger-codegen
    // these annotation are used for code generation
    compile group: 'io.swagger.codegen.v3', name: 'swagger-codegen', version: '3.0.19'


    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")

    testCompile("org.assertj:assertj-core:3.11.1")
    // https://mvnrepository.com/artifact/io.micronaut.test/micronaut-test-junit5
    testCompile "io.micronaut.test:micronaut-test-junit5:1.1.5"
    testCompile "org.mockito:mockito-junit-jupiter:2.22.0"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.1.0"
}

test.classpath += configurations.developmentOnly

mainClassName = "chatty.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')

flyway {
    url = 'jdbc:postgresql://localhost:5432/qa'
    user = 'qa'
    password = 'qa'
    schemas = ['public']

}

openApiGenerate {
    generatorName = "typescript-axios"
    inputSpec = "$buildDir/classes/java/main/META-INF/swagger/data-collection-api-0.0.yml".toString()
    outputDir = "$buildDir/generated".toString()
    apiPackage = "chatty.api"
    modelPackage = "chatty.models"
    packageName = "chatty"
    additionalProperties = [
            withSeparateModelsAndApi   : 'true',
            prependFormOrBodyParameters: 'true',
            nullSafeAdditionalProps:"true"

    ]


    configOptions = [
            dateLibrary: "java8"
    ]
}
openApiValidate {
    inputSpec = "$buildDir/classes/java/main/META-INF/swagger/data-collection-api-0.0.yml".toString()
    recommend = true
}